/* You can add global styles to this file, and also import other style files */
body {
    background-color: rgb(43, 43, 53);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

p{
    color: white
}

h1 h2 h3 h4 h5 h6 {
    color: white;
}

.menu-button {
    background-color: rgba(255, 255, 255, 0.05);
    width: 150px; 
    height: 150px; 
    border-radius: 1rem;
    margin: 1rem;
    border: rgba(255, 255, 255, 0.20) solid 3px;
    line-height: 150px;
    color: #198754a9;
    font-size: 100px;
    text-align: center;
}

.menu-button:hover {
    background-color: rgba(255, 255, 255, 0.1);
    color: #198754a9;
}

.icon-calc{
  color: rgb(255, 255, 255);
  background-color: #198754a9;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  font-size: 2rem;
  text-align: center;
  line-height: 3rem;
}

.result{
  color: white;

  font-size: 1rem;
  line-height: 3rem;
  zoom: 200%;
}

/*
=====
RESET STYLES
=====
*/

.field__input{ 
    --uiFieldPlaceholderColor: var(--fieldPlaceholderColor, rgb(255, 255, 255));
    
    background-color: transparent;
    border-radius: 0;
    border: none;
  
    -webkit-appearance: none;
    -moz-appearance: none;
  
    font-family: inherit;
    font-size: inherit;
  }
  
  .field__input:focus::-webkit-input-placeholder{
    color: var(--uiFieldPlaceholderColor);
  }
  
  .field__input:focus::-moz-placeholder{
    color: var(--uiFieldPlaceholderColor);
  }
  
  /*
  =====
  CORE STYLES
  =====
  */
  
  .field{
    --uiFieldBorderWidth: var(--fieldBorderWidth, 2px);
    --uiFieldPaddingRight: var(--fieldPaddingRight, 1rem);
    --uiFieldPaddingLeft: var(--fieldPaddingLeft, 1rem);   
    --uiFieldBorderColorActive: var(--fieldBorderColorActive, rgba(22, 22, 22, 1));
  
    display: var(--fieldDisplay, inline-flex);
    position: relative;
    font-size: var(--fieldFontSize, 1rem);
  }
  
  .field__input{
    caret-color: #198754;
    zoom:200%;
    color: #ffffff;
    box-sizing: border-box;
    width: var(--fieldWidth, 100%);
    height: var(--fieldHeight, 3rem);
    padding: var(--fieldPaddingTop, 1.25rem) var(--uiFieldPaddingRight) var(--fieldPaddingBottom, .5rem) var(--uiFieldPaddingLeft);
    border-bottom: var(--uiFieldBorderWidth) solid var(--fieldBorderColor, rgba(0, 0, 0, .25));  
  }
  
  .field__input:focus{
    outline: none;
  }
  
  .field__input::-webkit-input-placeholder{
    opacity: 0;
    transition: opacity .2s ease-out;
  }
  
  .field__input::-moz-placeholder{
    opacity: 0;
    transition: opacity .2s ease-out;
  }
  
  .field__input:focus::-webkit-input-placeholder{
    opacity: 0.09;
    transition-delay: .2s;
  }
  
  .field__input:focus::-moz-placeholder{
    opacity: 0.09;
    transition-delay: .2s;
  }
  
  .field__label-wrap{
    box-sizing: border-box;
    pointer-events: none;
    cursor: text;
  
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    color: #198754;

  }
  
  .field__label-wrap::after{
    content: "";
    box-sizing: border-box;
    width: 100%;
    height: 0;
    opacity: 0;
  
    position: absolute;
    bottom: 0;
    left: 0;
  }
  
  .field__input:focus ~ .field__label-wrap::after{
    opacity: 1;
  }
  
  .field__label{
    position: absolute;
    left: var(--uiFieldPaddingLeft);
    top: calc(50% - .5em);
  
    zoom: 150%;
    line-height: 2;
    font-size: var(--fieldHintFontSize, inherit);
  
    transition: top .2s cubic-bezier(0.9, -0.15, 0.1, 1.15), opacity .2s ease-out, font-size .2s ease-out;
    will-change: bottom, opacity, font-size;
  }
  
  .field__input:focus ~ .field__label-wrap .field__label,
  .field__input:not(:placeholder-shown) ~ .field__label-wrap .field__label{
    --fieldHintFontSize: var(--fieldHintFontSizeFocused, .75rem);
  
    top: var(--fieldHintTopHover, .25rem);
  }
  
  /* 
  effect 2
  */
  
  .field_v2 .field__label-wrap{
    overflow: hidden;
  }
  
  .field_v2 .field__label-wrap::after{
    border-bottom: var(--uiFieldBorderWidth) solid var(--uiFieldBorderColorActive);
    transform: translate3d(-105%, 0, 0);
    will-change: transform, opacity;
    transition: transform .285s ease-out .2s, opacity .2s ease-out .2s;
    zoom: 200%;
  }
  
  .field_v2 .field__input:focus ~ .field__label-wrap::after{
    transform: translate3d(0, 0, 0);
    transition-delay: 0;
  }
  /*
  =====
  LEVEL 4. SETTINGS
  =====
  */
  
  .field{
    --fieldBorderColor: #ffffff;
    --fieldBorderColorActive: #198754;
  }

  .fieldColorRed{
    --fieldBorderColor: #ffffff;
    --fieldBorderColorActive: #dc3545;
  }
  

/* WAVES */

.canva-container{
  position: relative;
  width: 100%;
  top: 0;
  left: 0;
  height: 100vh;
  overflow: hidden;
}


.tittle-calc {
  position: absolute;
  top: 25%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #198754;
  font-size: 10rem;
  font-weight: bold;
  text-align: center;
  width: 100%;
  text-transform: uppercase;
  letter-spacing: .1rem;
}

.icon-home{
  position: absolute;
  top: 10%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #ffffff;
  background-color: #198754;
  border-radius: 50%;
  font-size: 3rem;
  line-height: 5rem;
  text-align: center;
  width: 5rem;
  height: 5rem;
}

.ocean {
  height: 5%;
  width: 100%;
  position: absolute;
  bottom: 0;
  left: 0;
  background: #ffffff;
}

.wave {
  background: url("./assets/wave.svg") repeat-x;
  position: absolute;
  top: -198px;
  width: 6400px;
  height: 198px;
  animation: wave 7s cubic-bezier(0.36, 0.45, 0.63, 0.53) infinite;
  transform: translate3d(0, 0, 0);
}

.waveGreen {
  background: url("./assets/waveGreen.svg") repeat-x;
}
.waveRed {
  background: url("./assets/waveRed.svg") repeat-x;
}


.wave:nth-of-type(2) {
  top: -175px;
  animation: wave 7s cubic-bezier(0.36, 0.45, 0.63, 0.53) -0.125s infinite, swell 7s ease -1.25s infinite;
  opacity: 1;
}

@keyframes wave {
  0% {
    margin-left: 0;
  }
  100% {
    margin-left: -1600px;
  }
}
@keyframes swell {
  0%,
	100% {
    transform: translate3d(0, -25px, 0);
  }
  50% {
    transform: translate3d(0, 5px, 0);
  }
}
.endWave{
	display:none;
}

.result-textBox{
  border-bottom: 4.5px solid rgb(255, 255, 255);  
}